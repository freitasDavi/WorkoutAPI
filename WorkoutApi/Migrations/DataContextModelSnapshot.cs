// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutApi.Data;

#nullable disable

namespace WorkoutApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("WorkoutApi.Entities.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IDEXERCICIO");

                    b.Property<string>("GrupoMuscular")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EXERCICIOS", (string)null);
                });

            modelBuilder.Entity("WorkoutApi.Entities.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IDTREINO");

                    b.Property<int>("CodigoUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalTreinos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalTreinosExecutados")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CodigoUsuario");

                    b.ToTable("TREINOS", (string)null);
                });

            modelBuilder.Entity("WorkoutApi.Entities.TreinoExecutado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_TREINOSEXECUTADOS");

                    b.Property<int>("CodigoTreino")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodigoUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataExecucao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CodigoTreino");

                    b.HasIndex("CodigoUsuario");

                    b.ToTable("TREINOSEXECUTADOS", (string)null);
                });

            modelBuilder.Entity("WorkoutApi.Entities.TreinoExercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodigoExercicio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodigoTreino")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExercicioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExercicioId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciciosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TreinoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TreinoId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TreinosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("ExercicioId1");

                    b.HasIndex("ExerciciosId");

                    b.HasIndex("TreinoId");

                    b.HasIndex("TreinoId1");

                    b.HasIndex("TreinosId");

                    b.ToTable("TreinoExercicio");
                });

            modelBuilder.Entity("WorkoutApi.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IDUSUARIOS");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sexo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "IX_User_Email")
                        .IsUnique();

                    b.ToTable("USUARIOS", (string)null);
                });

            modelBuilder.Entity("WorkoutApi.Entities.Treino", b =>
                {
                    b.HasOne("WorkoutApi.Entities.Usuario", "Usuario")
                        .WithMany("Treinos")
                        .HasForeignKey("CodigoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WorkoutApi.Entities.TreinoExecutado", b =>
                {
                    b.HasOne("WorkoutApi.Entities.Treino", "Treino")
                        .WithMany("TreinosExecutados")
                        .HasForeignKey("CodigoTreino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutApi.Entities.Usuario", "Usuario")
                        .WithMany("TreinoExecutados")
                        .HasForeignKey("CodigoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treino");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WorkoutApi.Entities.TreinoExercicio", b =>
                {
                    b.HasOne("WorkoutApi.Entities.Exercicio", "Exercicio")
                        .WithMany()
                        .HasForeignKey("ExercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutApi.Entities.Exercicio", null)
                        .WithMany()
                        .HasForeignKey("ExercicioId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutApi.Entities.Exercicio", null)
                        .WithMany()
                        .HasForeignKey("ExerciciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutApi.Entities.Treino", "Treino")
                        .WithMany()
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutApi.Entities.Treino", null)
                        .WithMany()
                        .HasForeignKey("TreinoId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutApi.Entities.Treino", null)
                        .WithMany()
                        .HasForeignKey("TreinosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercicio");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("WorkoutApi.Entities.Treino", b =>
                {
                    b.Navigation("TreinosExecutados");
                });

            modelBuilder.Entity("WorkoutApi.Entities.Usuario", b =>
                {
                    b.Navigation("TreinoExecutados");

                    b.Navigation("Treinos");
                });
#pragma warning restore 612, 618
        }
    }
}
